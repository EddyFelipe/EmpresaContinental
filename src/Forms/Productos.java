/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Clases.Conexion;
import Modificar.*;
import Productos_panels.Carrito;
import Productos_panels.Correa;
import Productos_panels.Etiqueta;
import Productos_panels.Hilo;
import Productos_panels.Metales;
import Productos_panels.Plastico;
import Productos_panels.Tela;
import Productos_panels.Zipper;
import java.awt.BorderLayout;
import java.awt.Window;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlo
 */
public class Productos extends javax.swing.JPanel {

      DefaultTableModel modelo = new DefaultTableModel();
     // String sql="SELECT * FROM producto";
     Conexion con = new Conexion();
      Connection cn= con.ConectarBaseDatos();
    /**
     * Creates new form Productos
     */
    public Productos() {
        initComponents();
        mostrar_nombres_productos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jSeparator10 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaproducto = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setBackground(new java.awt.Color(36, 41, 46));
        setPreferredSize(new java.awt.Dimension(1420, 810));
        setRequestFocusEnabled(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator10.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 30, 10, 770));
        add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1420, 10));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Back.png"))); // NOI18N
        jButton4.setBorder(null);
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.setFocusPainted(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Back2.png"))); // NOI18N
        jButton4.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Back1.png"))); // NOI18N
        jButton4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jPanel2.setBackground(new java.awt.Color(36, 41, 46));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 405, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 120, 405, 550));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(665, 30, 10, 770));

        jLabel1.setFont(new java.awt.Font("Yu Gothic", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Categorias");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        jLabel2.setFont(new java.awt.Font("Yu Gothic", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText(" Productos");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, -1, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Ver.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setFocusPainted(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Ver2.png"))); // NOI18N
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Ver1.png"))); // NOI18N
        jButton1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 50, 100, -1));

        tablaproducto.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        tablaproducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaproducto);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 540, 730, 250));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Modificarp.png"))); // NOI18N
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setFocusPainted(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Modificar_click.png"))); // NOI18N
        jButton2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Modificar_mouse.png"))); // NOI18N
        jButton2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 170, 100, -1));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Eliminar4.png"))); // NOI18N
        jButton3.setBorder(null);
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setFocusPainted(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 50, 100, -1));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 120, 200, 30));

        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 220, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Seleccione categoria");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
      General.pnlContenedor.removeAll();
      General.pnlContenedor.repaint();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          // TODO add your handling code here:
          switch (jComboBox1.getSelectedIndex()) {
              case 0:
                  modelo.setColumnCount(0);
                  modelo.setRowCount(0);
                  mostrar_tela();
                  break;
              case 1:
                  
                  modelo.setColumnCount(0);
                  modelo.setRowCount(0);
                  mostrar_etiqueta();
                  break;
              case 2:
                   modelo.setColumnCount(0);
                  modelo.setRowCount(0);
                  mostrar_carrito();
                  break;
              case 3:
                  modelo.setColumnCount(0);
                  modelo.setRowCount(0);
                  mostrar_metales();
                  break;
              case 4:
                  modelo.setColumnCount(0);
                   modelo.setRowCount(0);
                   mostrar_correa();
                  break;
              case 5:
                   modelo.setColumnCount(0);
                  modelo.setRowCount(0);
                 mostrar_zipper();
                  break;
              case 6:
                  modelo.setColumnCount(0);
                  modelo.setRowCount(0);
                 mostrar_hilo();
                  break;
              case 7:
                  modelo.setColumnCount(0);
                  modelo.setRowCount(0);
                    mostrar_plastico();
                  break;
              default:
                  break;
          }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int fila =tablaproducto.getSelectedRow();
        
        
        if(fila>=0){
            int idproducto =Integer.valueOf(tablaproducto.getValueAt(fila,0).toString());
            switch (Integer.valueOf(tablaproducto.getValueAt(fila,1).toString())) {
              case 1:
                  modificar_tela(idproducto);
                  break;
              case 2:
                  modificar_etiqueta(idproducto);
                  break;
              case 3:
                  modificar_carrito(idproducto);
                  break;
              case 4:
                  modificar_metales(idproducto);
                  break;
              case 5:
                  modificar_correa(idproducto);
                  break;
              case 6:
                  modificar_zipper(idproducto);
                  break;
              case 7:
                  modificar_hilo(idproducto);
                  break;
              case 8:
                  modificar_plastico(idproducto);
                  break;
              default:
                  break;
          }
        }else{
            
            JOptionPane.showMessageDialog(null,"Debe seleccionar una fila para poder modificar");
            
        }
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
       switch (jComboBox2.getSelectedIndex()) {
              case 0:
                 panel_tela();
                  break;
              case 1:
                  panel_etiqueta();
                  break;
              case 2:
                  panel_carrito();
                  break;
              case 3:
                  panel_metales();
                  break;
              case 4:
                  panel_correa();
                  break;
              case 5:
                   panel_zipper();
                  break;
              case 6:
                panel_hilo();
                  break;
              case 7:
                 panel_plastico();
                  break;
        
              default:
                  break;
          }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int fila =tablaproducto.getSelectedRow();
        int celda=Integer.valueOf(tablaproducto.getValueAt(fila,0).toString());
        int sino = JOptionPane.YES_NO_OPTION;
        int resultado = JOptionPane.showConfirmDialog(null,"¿Desea elimiar este registro?","Advertencia",sino);
        if(resultado==0){
            int bandera;
            bandera=visible(celda);
            
            if(bandera==1){
                JOptionPane.showMessageDialog(null,"Eliminado Exitosamente");
            }else{
                
                JOptionPane.showMessageDialog(null,"Ocurrio un erro al eliminar el registro");
            }
             
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    public void mostrar_tela(){
        
       
        modelo.addColumn("ID");
        modelo.addColumn("Id Categoria");
        modelo.addColumn("Tipo");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Yardas");
        modelo.addColumn("Color");
        modelo.addColumn("Precio");
        
        tablaproducto.setModel(modelo);
        
        String[] datos = new String[7];
        Statement st;
          try {
            String cat=String.valueOf(jComboBox1.getSelectedItem());
            int id_categoria=id_categoria(cat);
            st=cn.createStatement();
            ResultSet rs=st.executeQuery("SELECT id_producto,tipo,cantidad,yardaje,color,precio_venta,categoria_id FROM producto WHERE categoria_id='"+id_categoria+"' AND visible='"+1+"'");
              
        while (rs.next()) {
            datos[0]= rs.getString(1);
            datos[1]= rs.getString(7);
            datos[2]= rs.getString(2);
            datos[3]= rs.getString(3);
            datos[4]= rs.getString(4);
            datos[5]= rs.getString(5);
            datos[6]= rs.getString(6);
            modelo.addRow(datos);
        }
              
          } catch (SQLException ex) {
              Logger.getLogger(Productos.class.getName()).log(Level.SEVERE, null, ex);
          }
    
    }
    
    public void  mostrar_etiqueta(){
        
        modelo.addColumn("ID");
        modelo.addColumn("Id Categoria");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Marca");
        modelo.addColumn("Tamaño");
        modelo.addColumn("Precio");
        
        tablaproducto.setModel(modelo);
        
        String[] datos = new String[6];
        Statement st;
          try {
               String cat=String.valueOf(jComboBox1.getSelectedItem());
              int id_categoria=id_categoria(cat);
              st=cn.createStatement();
              ResultSet rs=st.executeQuery("SELECT id_producto,categoria_id,cantidad,marca,tamaño,precio_venta FROM producto WHERE categoria_id='"+id_categoria+"'");
              
        while (rs.next()) {
            datos[0]= rs.getString(1);
            datos[1]= rs.getString(2);
            datos[2]= rs.getString(3);
            datos[3]= rs.getString(4);
            datos[4]= rs.getString(5);
            datos[5]= rs.getString(6);
            modelo.addRow(datos);
        }
              
          } catch (SQLException ex) {
              Logger.getLogger(Productos.class.getName()).log(Level.SEVERE, null, ex);
          }
        
    }

    public void mostrar_carrito(){
        
        modelo.addColumn("ID");
        modelo.addColumn("Id Categoria");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Color");
        modelo.addColumn("Tamaño");
        modelo.addColumn("Numero");
        modelo.addColumn("Precio");
        
        tablaproducto.setModel(modelo);
        
        String[] datos = new String[7];
        Statement st;
          try {
               String cat=String.valueOf(jComboBox1.getSelectedItem());
              int id_categoria=id_categoria(cat);
              st=cn.createStatement();
              ResultSet rs=st.executeQuery("SELECT id_producto,categoria_id,cantidad,color,tamaño,numero,precio_venta FROM producto WHERE categoria_id='"+id_categoria+"' AND visible='"+1+"'");
              
        while (rs.next()) {
            datos[0]= rs.getString(1);
            datos[1]= rs.getString(2);
            datos[2]= rs.getString(3);
            datos[3]= rs.getString(4);
            datos[4]= rs.getString(5);
            datos[5]= rs.getString(6);
            datos[6]= rs.getString(7);
            modelo.addRow(datos);
        }
              
          } catch (SQLException ex) {
              Logger.getLogger(Productos.class.getName()).log(Level.SEVERE, null, ex);
          }
        
    }
    
    public void mostrar_metales(){
        
        modelo.addColumn("ID");
        modelo.addColumn("Id Categoria");
        modelo.addColumn("Tipo");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Medida");
        modelo.addColumn("Precio");
        
        tablaproducto.setModel(modelo);
        
        String[] datos = new String[6];
        Statement st;
          try {
              String cat=String.valueOf(jComboBox1.getSelectedItem());
              int id_categoria=id_categoria(cat);
              st=cn.createStatement();
              ResultSet rs=st.executeQuery("SELECT id_producto,categoria_id,tipo,cantidad,medida,precio_venta FROM producto WHERE categoria_id='"+id_categoria+"' AND visible='"+1+"'");
              
        while (rs.next()) {
            datos[0]= rs.getString(1);
            datos[1]= rs.getString(2);
            datos[2]= rs.getString(3);
            datos[3]= rs.getString(4);
            datos[4]= rs.getString(5);
            datos[5]= rs.getString(6);
            modelo.addRow(datos);
        }
              
          } catch (SQLException ex) {
              Logger.getLogger(Productos.class.getName()).log(Level.SEVERE, null, ex);
          }
        
    }
    
    public void mostrar_correa(){
        
        modelo.addColumn("ID");
        modelo.addColumn("Id Categoria");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Color");
        modelo.addColumn("Numero");
        modelo.addColumn("Precio");
        
        tablaproducto.setModel(modelo);
        
        String[] datos = new String[6];
        Statement st;
          try {
               String cat=String.valueOf(jComboBox1.getSelectedItem());
              int id_categoria=id_categoria(cat);
              st=cn.createStatement();
              ResultSet rs=st.executeQuery("SELECT id_producto,categoria_id,cantidad,color,numero,precio_venta FROM producto WHERE categoria_id='"+id_categoria+"' AND visible='"+1+"'");
              
        while (rs.next()) {
            datos[0]= rs.getString(1);
            datos[1]= rs.getString(2);
            datos[2]= rs.getString(3);
            datos[3]= rs.getString(4);
            datos[4]= rs.getString(5);
            datos[5]= rs.getString(6);
            modelo.addRow(datos);
        }
              
          } catch (SQLException ex) {
              Logger.getLogger(Productos.class.getName()).log(Level.SEVERE, null, ex);
          }
    }
    
    public void mostrar_zipper(){
        
        modelo.addColumn("ID");
        modelo.addColumn("Id Categoria");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Color");
        modelo.addColumn("Tamaño");
        modelo.addColumn("Numero");
        modelo.addColumn("Precio");
        
        tablaproducto.setModel(modelo);
        
        String[] datos = new String[7];
        Statement st;
          try {
               String cat=String.valueOf(jComboBox1.getSelectedItem());
              int id_categoria=id_categoria(cat);
              st=cn.createStatement();
              ResultSet rs=st.executeQuery("SELECT id_producto,categoria_id,cantidad,color,tamaño,numero,precio_venta FROM producto WHERE categoria_id='"+id_categoria+"' AND visible='"+1+"'");
              
        while (rs.next()) {
            datos[0]= rs.getString(1);
            datos[1]= rs.getString(2);
            datos[2]= rs.getString(3);
            datos[3]= rs.getString(4);
            datos[4]= rs.getString(5);
            datos[5]= rs.getString(6);
            datos[6]= rs.getString(7);
            modelo.addRow(datos);
        }
              
          } catch (SQLException ex) {
              Logger.getLogger(Productos.class.getName()).log(Level.SEVERE, null, ex);
          }
    }
    
    public void mostrar_hilo(){
        
        modelo.addColumn("ID");
        modelo.addColumn("Id Categoria");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Color");
        modelo.addColumn("Marca");
        modelo.addColumn("Precio");
        
        tablaproducto.setModel(modelo);
        
        String[] datos = new String[6];
        Statement st;
          try {
              String cat=String.valueOf(jComboBox1.getSelectedItem());
              int id_categoria=id_categoria(cat);
              st=cn.createStatement();
              ResultSet rs=st.executeQuery("SELECT id_producto,categoria_id,cantidad,color,marca,precio_venta FROM producto WHERE categoria_id='"+id_categoria+"' AND visible='"+1+"'");
              
        while (rs.next()) {
            datos[0]= rs.getString(1);
            datos[1]= rs.getString(2);
            datos[2]= rs.getString(3);
            datos[3]= rs.getString(4);
            datos[4]= rs.getString(5);
            datos[5]= rs.getString(6);
            modelo.addRow(datos);
        }
              
          } catch (SQLException ex) {
              Logger.getLogger(Productos.class.getName()).log(Level.SEVERE, null, ex);
          }
        
    }
    
    public void mostrar_plastico(){
        
        modelo.addColumn("ID");
        modelo.addColumn("Id Categoria");
        modelo.addColumn("Tipo");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Medida");
        modelo.addColumn("Precio");
        
        tablaproducto.setModel(modelo);
        
        String[] datos = new String[6];
        Statement st;
          try {
              String cat=String.valueOf(jComboBox1.getSelectedItem());
              int id_categoria=id_categoria(cat);
              st=cn.createStatement();
              ResultSet rs=st.executeQuery("SELECT id_producto,categoria_id,tipo,cantidad,medida,precio_venta FROM producto WHERE categoria_id='"+id_categoria+"' AND visible='"+1+"'");
              
        while (rs.next()) {
            datos[0]= rs.getString(1);
            datos[1]= rs.getString(2);
            datos[2]= rs.getString(3);
            datos[3]= rs.getString(4);
            datos[4]= rs.getString(5);
            datos[5]= rs.getString(6);
            modelo.addRow(datos);
        }
              
          } catch (SQLException ex) {
              Logger.getLogger(Productos.class.getName()).log(Level.SEVERE, null, ex);
          }
    }
    
    public void panel_tela(){
      
      
        Tela tela = new Tela();
        tela.index=String.valueOf(jComboBox2.getSelectedItem());
        tela.setSize(405,550);
        tela.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(tela,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
    }
    
    public void panel_etiqueta(){
     
         Etiqueta etiqueta = new Etiqueta();
         etiqueta.index=String.valueOf(jComboBox2.getSelectedItem());
        etiqueta.setSize(405,550);
        etiqueta.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(etiqueta,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
        
    }
    
    public void panel_carrito(){
        
        Carrito carrito = new Carrito();
        carrito.index=(String.valueOf(jComboBox2.getSelectedItem()));
        carrito.setSize(405,550);
        carrito.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(carrito,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
    }
    
    public void panel_metales(){
        
        Metales metal = new Metales();
        metal.index=(String.valueOf(jComboBox2.getSelectedItem()));
        metal.setSize(405,550);
        metal.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(metal,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
    }
    
    public void panel_correa(){
        
        Correa c = new Correa();
        c.index=(String.valueOf(jComboBox2.getSelectedItem()));
        c.setSize(405,550);
        c.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(c,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
    }
    
    public void panel_zipper(){
        Zipper z = new Zipper();
        z.index=(String.valueOf(jComboBox2.getSelectedItem()));
        z.setSize(405,550);
        z.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(z,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
    }
    
    public void panel_hilo(){
        
         Hilo h = new Hilo();
         h.index=(String.valueOf(jComboBox2.getSelectedItem()));
        h.setSize(405,550);
        h.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(h,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
    }
    
    public void panel_plastico(){
        
        Plastico p = new Plastico();
        p.index=(String.valueOf(jComboBox2.getSelectedItem()));
        p.setSize(405,550);
        p.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(p,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
    }
    
    public void mostrar_nombres_productos(){
        
         
   
         String sql ="SELECT categoria FROM categoria";
         Statement st ;
         ResultSet rs;
         
          try {
              st= cn.createStatement();
              rs = st.executeQuery(sql);
              while (rs.next()) {
                  
                  jComboBox1.addItem(rs.getString(1));
                  jComboBox2.addItem(rs.getString(1));
                  
              } } catch (SQLException ex) {
              Logger.getLogger(Productos.class.getName()).log(Level.SEVERE, null, ex);
          }
   
    }
    
    public int id_categoria(String categoria){
        
        Statement st;
        int idcategoria=0;
          try {
              st=cn.createStatement();
              ResultSet rs=st.executeQuery("SELECT id FROM categoria WHERE categoria='"+categoria+"'");
              
        while (rs.next()) {
          
            idcategoria=rs.getInt(1);
            
        }
              
          } catch (SQLException ex) {
              Logger.getLogger(Productos.class.getName()).log(Level.SEVERE, null, ex);
          }
       return idcategoria;
    }
    
    public int visible(int idproducto){
        
       
          try {
              String sql ="UPDATE producto SET visible='"+0+"' WHERE id_producto='"+idproducto+"'";
              PreparedStatement preparado= cn.prepareStatement(sql);
              preparado.executeUpdate();
              return 1;
          } catch (SQLException ex) {
              Logger.getLogger(Productos.class.getName()).log(Level.SEVERE, null, ex);
          }
        return 0;
    }
    
    public void modificar_tela(int idproducto){
        Mtela tela = new Mtela(idproducto);
        tela.id_producto=idproducto;
        tela.setSize(405,550);
        tela.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(tela,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
    }
    
    public void modificar_etiqueta(int idproducto){
        Metiqueta tela = new Metiqueta(idproducto);
        tela.setSize(405,550);
        tela.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(tela,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
    }
    
    public void modificar_carrito(int idproducto){
        Mcarrito tela = new Mcarrito(idproducto);
        tela.setSize(405,550);
        tela.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(tela,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
    }
    
    public void modificar_metales(int idproducto){
        Mmetales tela = new Mmetales(idproducto);
        tela.setSize(405,550);
        tela.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(tela,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
    }
    
    public void modificar_correa(int idproducto){
        Mcorrea tela = new Mcorrea(idproducto);
        tela.setSize(405,550);
        tela.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(tela,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
    }
    
    public void modificar_zipper(int idproducto){
        Mzipper tela = new Mzipper(idproducto);
        tela.setSize(405,550);
        tela.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(tela,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
    }
    
    public void modificar_hilo(int idproducto){
        Mhilo tela = new Mhilo(idproducto);
        tela.setSize(405,550);
        tela.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(tela,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
    }
    
    public void modificar_plastico(int idproducto){
        Mplastico tela = new Mplastico(idproducto);
        tela.setSize(405,550);
        tela.setLocation(0,0);
        jPanel2.removeAll();
        jPanel2.add(tela,BorderLayout.CENTER);
        jPanel2.revalidate();
        jPanel2.repaint();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    public javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tablaproducto;
    // End of variables declaration//GEN-END:variables
}
